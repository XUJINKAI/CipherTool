name: publish release

on:
  push:
    tags: 
      - 'v*'

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
      - name: Save Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt

  build:
    name: Build and Upload
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_target: [linux-x64, win-x64]
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.301
      - name: Get Tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Download release_url File
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release Upload URL
        id: get_release_info
        run: |
          value=`cat release_url/release_url.txt`
          echo ::set-output name=upload_url::$value
      - name: Build ${{ matrix.build_target }}
        run: dotnet publish -c Release -r ${{ matrix.build_target }} -o publish-${{ matrix.build_target }} /p:PublishSingleFile=true --no-self-contained cipherc/cipherc.csproj
      - name: Zip ${{ matrix.build_target }}
        run: zip -r -j cipherc-${{ steps.vars.outputs.tag }}-${{ matrix.build_target }}.zip publish-${{ matrix.build_target }}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./cipherc-${{ steps.vars.outputs.tag }}-${{ matrix.build_target }}.zip
          asset_name: cipherc-${{ steps.vars.outputs.tag }}-${{ matrix.build_target }}.zip
          asset_content_type: application/zip
